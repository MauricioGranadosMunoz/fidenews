set serveroutput on
--USUARIOS---
CREATE OR REPLACE PROCEDURE SP_INSERT_UPDATE_USERS (USER_ID_V INTEGER,CORREO_V VARCHAR2,NOMBRE_V VARCHAR2,APELLIDOS_V VARCHAR2,ESTADO_V NUMBER,CONTRASENA_V VARCHAR2,ROL_ID_V INTEGER)    
AS
N1 INTEGER;
BEGIN  
Select MAX(USER_ID) into N1 from USUARIOS;
N1:=N1+1;
IF USER_ID_V = 0 THEN
INSERT INTO USUARIOS (USER_ID,CORREO,NOMBRE,APELLIDOS,ESTADO,CONTRASENA,ROL_ID)  
VALUES (N1,CORREO_V,NOMBRE_V,APELLIDOS_V,ESTADO_V,CONTRASENA_V,ROL_ID_V);  
ELSE
UPDATE USUARIOS SET CORREO=CORREO_V,NOMBRE=NOMBRE_V,APELLIDOS=APELLIDOS_V,ESTADO=ESTADO_V,CONTRASENA=CONTRASENA_V,ROL_ID=ROL_ID_V WHERE USER_ID=USER_ID_V;  
END IF;  
COMMIT;
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS '); 
END;  
/  
exec INSERT_UPDATE_USERS(0,'jose@ramos.com' ,'Jose' ,'Ovares' ,1 ,'Abc123456' ,3 )
select * from usuarios;
exec INSERT_UPDATE_USERS(5,'daniel@ramos.com' ,'Daniel' ,'Ovares' ,1 ,'Abc123456' ,3 )



CREATE OR REPLACE PROCEDURE SP_SELECT_USUARIOS (ESTADO_V INTEGER, display OUT SYS_REFCURSOR)  
IS  
BEGIN  
CASE
WHEN ESTADO_V=0 THEN
    OPEN display for SELECT * FROM USUARIOS WHERE ESTADO=ESTADO_V;  
WHEN ESTADO_V=1 THEN
    OPEN display for SELECT * FROM USUARIOS WHERE ESTADO=ESTADO_V;  
ELSE
    OPEN display for SELECT * FROM USUARIOS; 
END CASE;
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS '); 
END;  
/ 
exec SELECT_USUARIOS (3,:cursor_output)
print cursor_output;



CREATE OR REPLACE PROCEDURE SP_DELETE_USUARIOS (USER_ID_V INTEGER)  
IS  
BEGIN  
DELETE FROM USUARIOS WHERE USER_ID=USER_ID_V; 
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS ');  
END;  
/ 
exec DELETE_USUARIOS(5);


---ROLS---
CREATE OR REPLACE PROCEDURE SP_INSERT_UPDATE_ROLS (ROL_ID_V INTEGER,TIPO_V VARCHAR2)    
AS
N1 INTEGER;
BEGIN  
Select MAX(ROL_ID) into N1 from ROLS;
N1:=N1+1;
IF ROL_ID_V = 0 THEN
INSERT INTO ROLS (ROL_ID,TIPO)  
VALUES (N1,TIPO_V);  
ELSE
UPDATE ROLS SET TIPO=TIPO_V WHERE ROL_ID=ROL_ID_V;  
END IF;  
COMMIT;
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS '); 
END;  
/  
exec INSERT_UPDATE_ROLS(0,'Profesor'  )
select * from ROLS;
exec INSERT_UPDATE_ROLS(4,'Moderador'  )



CREATE OR REPLACE PROCEDURE SP_SELECT_ROLS (display OUT SYS_REFCURSOR)  
IS  
BEGIN  
OPEN display for SELECT * FROM ROLS ;
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS ');   
END;  
/ 
variable cursor_output2 REFCURSOR
exec SELECT_ROLS (:cursor_output2)
print cursor_output2;



CREATE OR REPLACE PROCEDURE SP_DELETE_ROLS (ROL_ID_V INTEGER)  
IS  
BEGIN  
DELETE FROM ROLS WHERE ROL_ID=ROL_ID_V;  
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS '); 
END;  
/ 
exec DELETE_ROLS(4);

---REACCIONES----


CREATE OR REPLACE PROCEDURE SP_INSERT_UPDATE_REACCIONES (REACCION_ID_V INTEGER, TIPO_REACCION_V VARCHAR2,COMENTARIO_V VARCHAR, USER_ID_V INTEGER,NOTICIA_ID_V INTEGER)    
AS
N1 INTEGER;
BEGIN  
Select MAX(REACCION_ID) into N1 from REACCIONES;
N1:=N1+1;
IF REACCION_ID_V = 0 THEN
INSERT INTO REACCIONES (REACCION_ID,TIPO_REACCION,COMENTARIO,USER_ID, NOTICIA_ID)  
VALUES (N1,TIPO_REACCION_V,COMENTARIO_V,USER_ID_V,NOTICIA_ID_V);  
ELSE
UPDATE REACCIONES SET TIPO_REACCION=TIPO_REACCION_V,COMENTARIO=COMENTARIO_V,USER_ID=USER_ID_V, NOTICIA_ID=NOTICIA_ID_V WHERE REACCION_ID=REACCION_ID_V;  
END IF;  
COMMIT;
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS '); 
END;  
/  
exec SP_INSERT_UPDATE_REACCIONES(0,'COMENTARIO','QUE CHIVA',1,2)
select * from ROLS;
exec INSERT_UPDATE_ROLS(4,'COMENTARIO','QUE BUENO',1,2)



CREATE OR REPLACE PROCEDURE SP_SELECT_REACCIONES (TIPO_V VARCHAR2,display OUT SYS_REFCURSOR)  
IS  
BEGIN  
CASE
WHEN TIPO_V='LIKE' THEN
    OPEN display for SELECT * FROM VIEW_REACCIONES WHERE REGEXP_LIKE (TIPO_REACCION, '^LIKE$'); 
WHEN TIPO_V='COMENTARIO' THEN
    OPEN display for SELECT * FROM VIEW_REACCIONES WHERE  REGEXP_LIKE (TIPO_REACCION, '^COMENTARIO$');  
ELSE
    OPEN display for SELECT * FROM VIEW_REACCIONES ;  
END CASE;
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS '); 
END;  
/ 
variable cursor_output3 REFCURSOR
exec SELECT_REACCIONES ('COMENTARIO',:cursor_output3)
print cursor_output3;


CREATE OR REPLACE PROCEDURE SP_DELETE_REACCIONES (REACCION_ID_V INTEGER)  
IS  
BEGIN  
DELETE FROM REACCIONES WHERE REACCION_ID=REACCION_ID_V; 
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS ');  
END;  
/ 
exec DELETE_REACCIONES(4);

---NOTICIAS---


CREATE OR REPLACE PROCEDURE SP_SELECT_NEWS  (Autor2 in VARCHAR2, FECHA2 IN VARCHAR2, CATEGORIA2 IN VARCHAR2,display OUT SYS_REFCURSOR)
AS
RESP INTEGER;
N2 NUMBER;
N1 number :=1;
BEGIN
Select COUNT(NOTICIA_ID) into N2 from VIEW_NOTICIAS;
CASE
WHEN Autor2!='All' and FECHA2!='All' and CATEGORIA2!='All' then
    SELECT TITULO
    INTO RESP
    FROM VIEW_NOTICIAS
    WHERE AUTOR=Autor2 AND FECHA_CREACION_NOTICIA=TO_DATE(Fecha2) AND CATEGORIA=CATEGORIA2;
WHEN Autor2!='All' and FECHA2='All' and CATEGORIA2!='All' then
    OPEN display for SELECT * FROM VIEW_NOTICIAS
    WHERE AUTOR=Autor2 AND  CATEGORIA=CATEGORIA2; 
WHEN Autor2!= 'All' and FECHA2!='All' and CATEGORIA2='All' then
    OPEN display for SELECT * FROM VIEW_NOTICIAS
    WHERE AUTOR=Autor2 AND FECHA_CREACION_NOTICIA=TO_DATE(Fecha2);
WHEN Autor2!= 'All' and FECHA2='All' and CATEGORIA2='All' then
    OPEN display for SELECT * FROM VIEW_NOTICIAS
    WHERE AUTOR=Autor2;
WHEN Autor2='All' and FECHA2!='All' and CATEGORIA2='All' then
    OPEN display for SELECT * FROM VIEW_NOTICIAS
    WHERE FECHA_CREACION_NOTICIA= TO_DATE(Fecha2);
WHEN Autor2= 'All' and FECHA2!='All' and CATEGORIA2 !='All' then
    OPEN display for SELECT * FROM VIEW_NOTICIAS
    WHERE FECHA_CREACION_NOTICIA=TO_DATE(Fecha2) AND CATEGORIA=CATEGORIA2;
WHEN Autor2= 'All' and FECHA2='All' and CATEGORIA2 !='All' then
    OPEN display for SELECT * FROM VIEW_NOTICIAS
    WHERE CATEGORIA=CATEGORIA2 ;
WHEN Autor2='All' and FECHA2='All' and CATEGORIA2='All' then
    OPEN display for SELECT * FROM VIEW_NOTICIAS;
end CASE;
n1 := n1+1;
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS '); 
END;  

variable cursor_output3 REFCURSOR
exec SP_SELECT_NEWS  ('Mauricio Granados','All','Economia',:cursor_output3)
print cursor_output3;


CREATE OR REPLACE PROCEDURE SP_DELETE_NOTICIA (NOTICIA_ID_V INTEGER)  
IS  
BEGIN  
DELETE FROM NOTICIAS WHERE NOTICIA_ID=NOTICIA_ID_V; 
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS ');  
END;  
/ 

CREATE OR REPLACE PROCEDURE SP_INSERT_UPDATE_NOTICIAS (NOTICIA_ID_V INTEGER,LINK_IMAGEN_V VARCHAR2,CATEGORIA_V VARCHAR2,DESCRIPCION_V VARCHAR2, TITULO_V VARCHAR2,USER_ID_V INTEGER)    
AS
N1 INTEGER;
BEGIN  
Select MAX(NOTICIA_ID) into N1 from NOTICIAS;
N1:=N1+1;
IF NOTICIA_ID_V = 0 THEN
INSERT INTO NOTICIAS (NOTICIA_ID,LINK_IMAGEN,CATEGORIA,DESCRIPCION, TITULO,USER_ID)  
VALUES (N1,LINK_IMAGEN_V,CATEGORIA_V,DESCRIPCION_V, TITULO_V,USER_ID_V);  
ELSE
UPDATE REACCIONES SET LINK_IMAGEN=LINK_IMAGEN_V,CATEGORIA=CATEGORIA_V,DESCRIPCION=DESCRIPCION_V, TITULO=TITULO_V,USER_ID=USER_ID_V WHERE NOTICIA_ID=NOTICIA_ID_V;  
END IF;  
COMMIT;
EXCEPTION 
 WHEN OTHERS THEN
    dbms_output.put_line ('Error while status as SUCCESS '); 
END;  
/  